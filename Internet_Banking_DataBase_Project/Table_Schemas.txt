
CREATE TABLE CUSTOMER( customer_id INT(8) PRIMARY KEY,
                       customer_name VARCHAR(30), 
                       date_of_birth DATE,
                       gender CHAR(1),
                       email VARCHAR(30)
                     );

CREATE TABLE CUSTOMER_ADDRESS( customer_id INTEGER(8),
                       street VARCHAR(30), 
                       city VARCHAR(30),
                       zipcode INTEGER(10),
                       PRIMARY KEY( customer_id,zipcode ),
                       FOREIGN KEY (customer_id) REFERENCES CUSTOMER(customer_id)
                       ON DELETE CASCADE
                     );
					 

CREATE TABLE SIGN_IN(  login_id INTEGER(8) PRIMARY KEY,
                       password VARCHAR(30), 
                       login_date DATE,
                       FOREIGN KEY (login_id) REFERENCES CUSTOMER(customer_id)
                       ON DELETE CASCADE
                     ); 

CREATE TABLE ACCOUNT(  account_no INTEGER(10) PRIMARY KEY,
                       account_type CHAR(1), 
                       available_balance INTEGER(6),
		       acc_open_date DATE,
		       acc_status CHAR(1),
		       branch_code INTEGER(3),
		       customer_id INT(8),
                       FOREIGN KEY (branch_code) REFERENCES BRANCH(branch_code) ON DELETE SET NULL,
		       FOREIGN KEY (customer_id) REFERENCES CUSTOMER(customer_id)
                       
                     );
					 
CREATE TABLE BRANCH(  branch_code INTEGER(3) PRIMARY KEY,
                      branch_name VARCHAR(30)
                     );
					 

CREATE TABLE BRANCH_ADDRESS(  branch_code INTEGER(3),
                              zipcode INTEGER(5),
                              street VARCHAR(30),
			      city VARCHAR(30),
			      PRIMARY KEY ( branch_code,zipcode ),
			      FOREIGN KEY (branch_code) REFERENCES BRANCH(branch_code) ON DELETE CASCADE
                           );


CREATE TABLE BILL(    bill_id VARCHAR(10) PRIMARY KEY,
                      bill_amt INTEGER(5) NOT NULL,
					  transaction_date DATE,
					  from_acc INTEGER(10),
					  description VARCHAR(30) DEFAULT NULL,
					  to_acc INTEGER(10),
					  customer_id INTEGER(8),
					  FOREIGN KEY (customer_id) REFERENCES CUSTOMER(customer_id)
                     );


CREATE TABLE BENFICIARY(                  ben_name VARCHAR(30),
                                          ben_email VARCHAR(30),
					  ben_phone_number INTEGER(10),
					  ben_account_no INTEGER(20),
					  routing_no INTEGER(4),
					  account_no INTEGER(10),
		                          PRIMARY KEY(ben_name,ben_email,account_no),
					  FOREIGN KEY (account_no) REFERENCES ACCOUNT(account_no)
					  ON DELETE CASCADE
                     );
					 
					 
CREATE TABLE FUND_TRANSFER( transaction_id VARCHAR(10),
                      trans_description VARCHAR(30) DEFAULT NULL,
					  trans_amt INTEGER(6) NOT NULL,
					  trans_date DATE,
					  ben_name VARCHAR(30),
					  ben_email VARCHAR(30),
					  from_account_no INTEGER(10),
			          PRIMARY KEY(transaction_id,ben_name,ben_email,from_account_no),
					  FOREIGN KEY(ben_name,ben_email,from_account_no) REFERENCES BENFICIARY(ben_name,ben_email,account_no)
                     );		 


CREATE TABLE FIXED_DEPOSIT( fd_id VARCHAR(10),
                      customer_id INT(8),
					  fd_term INTEGER(6) NOT NULL,
					  fd_open_date DATE,
					  fd_maturity_date DATE,
					  fd_status CHAR(1),
					  fd_amt INTEGER(10),
					  interest_rate int(3),
					  total_amt INT(8),
					  liquidate_date DATE,
			          PRIMARY KEY(fd_id),
					  FOREIGN KEY(customer_id) REFERENCES CUSTOMER(customer_id)
                     );	
					 

 CREATE TABLE CREDIT_CARD( credit_card_no INT(10) PRIMARY KEY,
                      customer_id INT(8),
					  issue_date DATE,
					  expiration_date DATE,
					  credit_limit INT(10),
					  outstanding_amt INT(10),
					  name_on_card VARCHAR(30),
					  FOREIGN KEY(customer_id) REFERENCES CUSTOMER(customer_id) ON DELETE SET NULL
                     );	
					 

 CREATE TABLE LOAN(        loan_id VARCHAR(10) PRIMARY KEY,
                           customer_id INT(8),
					       loan_open_date DATE,
					       loan_duration INT,
					       interest_rate real(2,1),
					       loan_status CHAR(1),
						   loan_amount INT(10),
					       outstanding_amt INT(10),
					       FOREIGN KEY(customer_id) REFERENCES CUSTOMER(customer_id) ON DELETE SET NULL
                     );	
	
	
 CREATE TABLE LOAN_PAYMENT( loan_payment_id INT(10),
                           loan_id VARCHAR(10),
					       from_account INT(15),
					       loan_payment_amt INT,
					       payment_date DATE,
					       PRIMARY KEY ( loan_payment_id, loan_id ),
					       FOREIGN KEY(loan_id) REFERENCES LOAN(loan_id)
                     );	